generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  password     String
  name         String
  age          Int
  stepRecords  StepRecord[]
  wonBattles   BattleRecord[] @relation("Winner")
  lostBattles  BattleRecord[] @relation("Loser")
  encountersRecords Encounters[] @relation("EncountersRecords")
  recordedEncounters Encounters[] @relation("RecordedEncounters")
}

model StepRecord {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  date DateTime
  steps Int
}

model BattleRecord {
  id        Int    @id @default(autoincrement())
  date      DateTime
  winner    User   @relation("Winner", fields: [winnerId], references: [id])
  winnerId  Int
  loser     User   @relation("Loser", fields: [loserId], references: [id])
  loserId   Int
}

model Eid_key {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  eid       String   @default(uuid()) @db.Uuid @unique
  createdAt DateTime @default(now())
}

model Encounters {
  id          Int      @id @default(autoincrement())
  recorderUserId      Int
  recorderUser        User     @relation("EncountersRecords", fields: [RecorderUserId], references: [id])
  recordedUserId      Int
  recordedUser        User     @relation("RecordedEncounters", fields: [recordedUserId], references: [id])
  done_battle Boolean          @default(false)
  createdAt   DateTime @default(now())
}